二分搜索的一点特点，
1.必会查找到l=r
2.当l<r时，上一次移动前必是l=r

ps:注意找得到的，找不到的，最大的也不行，最小的也不行几种情况


二分搜索退出时的特点
二分搜索的退出条件一般是!(l<r),退出前最后一次搜索有两种状态
1.l+1=r,此时l=m,当target<nums[m]时，r更新为m-1,此时二分结束
2.l+1=r,此时l=m,当target>nums[m]时，l更新为m+1,此时l=m=r,再进行一次搜索就退出
二分搜索退出时，一般r为接近的左值，l为接近的右值

二分搜索类的题目要注意索引问题，注意搜索范围缩小为1，2时的情况
#1 标准搜素
int binarySearch(int nums[], int l, int r, int x) {
        while (l<=r) {
            int mid = (l + r) / 2;
            if (nums[mid] > x)
                r = mid - 1;
            else if (nums[mid] < x)
                l = mid + 1;
            else
                return mid;
        }
        return -1;
    }


#2 搜索右极限，最左比某个值>=
int binarySearch(int nums[], int l, int r, int x) {
        while (r >= l) {
            int mid = (l + r) / 2;
            if (nums[mid] >= x)
                r = mid - 1;
            else
                l = mid + 1;
        }
        return l;
    }


#3 搜索左极限，最右比某个值<=
int binarySearch(int nums[], int l, int r, int x) {
        while (r >= l) {
            int mid = (l + r) / 2;
            if (nums[mid] <= x)
                l = mid + 1;
            else
                r = mid - 1;
        }
        return r;
    }

